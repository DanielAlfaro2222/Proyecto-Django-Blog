# Generated by Django 4.0.2 on 2022-02-07 19:10

import Users.models
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id_user', models.AutoField(primary_key=True, serialize=False, verbose_name='Id usuario')),
                ('first_name', models.CharField(default='', max_length=45, verbose_name='Nombre')),
                ('last_name', models.CharField(default='', max_length=45, verbose_name='Nombre')),
                ('email', models.CharField(max_length=55, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='Correo')),
                ('image', models.ImageField(blank=True, null=True, upload_to='users/profile_image', verbose_name='Imagen de perfil')),
                ('biography', models.TextField(blank=True, null=True, verbose_name='Biografia')),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Hombre'), ('FEMALE', 'Mujer'), ('OTHER', 'Prefiero no decirlo')], default='Prefiero no decirlo', max_length=19, null=True, verbose_name='Genero')),
                ('linkedin', models.URLField(blank=True, null=True, verbose_name='Linkedin')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Administrador')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', Users.models.UserManager()),
            ],
        ),
    ]
