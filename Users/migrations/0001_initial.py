# Generated by Django 4.0.4 on 2022-06-12 00:58

import Django_Blog.utils
import Users.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id_city', models.AutoField(primary_key=True, serialize=False, verbose_name='Id Ciudad')),
                ('description', models.CharField(blank=True, max_length=45, null=True, verbose_name='Descripcion')),
                ('zip_code', models.CharField(max_length=6, verbose_name='Codigo postal')),
                ('create', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creacion')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificacion')),
                ('state', models.CharField(choices=[('Activo', 'Activo'), ('Desactivo', 'Desactivo')], default='Activo', max_length=10, verbose_name='Estado')),
            ],
            options={
                'verbose_name': 'Ciudad',
                'verbose_name_plural': 'Ciudades',
                'db_table': 'Ciudad',
                'ordering': ['id_city'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id_user', models.AutoField(primary_key=True, serialize=False, verbose_name='Id usuario')),
                ('first_name', models.CharField(default='', max_length=45, verbose_name='Nombre')),
                ('last_name', models.CharField(default='', max_length=45, verbose_name='Apellido')),
                ('email', models.CharField(max_length=55, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='Correo')),
                ('image', models.ImageField(blank=True, null=True, upload_to='users/profile_image', validators=[Django_Blog.utils.validate_image], verbose_name='Imagen de perfil')),
                ('biography', models.CharField(blank=True, max_length=120, null=True, verbose_name='Biografia')),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Hombre'), ('FEMALE', 'Mujer'), ('OTHER', 'Prefiero no decirlo')], default='Prefiero no decirlo', max_length=19, null=True, verbose_name='Genero')),
                ('linkedin', models.URLField(blank=True, null=True, verbose_name='Linkedin')),
                ('twitter', models.URLField(blank=True, null=True, verbose_name='Twitter')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Administrador')),
                ('state', models.CharField(choices=[('Activo', 'Activo'), ('Desactivo', 'Desactivo')], default='Activo', max_length=10, verbose_name='Estado')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True, verbose_name='Url')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Users.city', verbose_name='Ciudad')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', Users.models.UserManager()),
            ],
        ),
    ]
